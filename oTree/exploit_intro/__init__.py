from otree.api import *


doc = """
Your app description
"""


class Constants(BaseConstants):
    name_in_url = 'exploit_intro'
    players_per_group = None
    num_rounds = 1


class Subsession(BaseSubsession):
    pass


class Group(BaseGroup):
    pass


class Player(BasePlayer):
    choice = models.StringField(initial="non", blank=True)
    information_cost_round = models.CurrencyField(initial = 0)
    switching_cost_round = models.CurrencyField(initial = 0)

    # payoff tracker 
    trial_payoff = models.CurrencyField(initial = 0)
    payout_left = models.CurrencyField(initial = 0)
    payout_right = models.CurrencyField(initial = 0)


class New_Stage_Announcement(Page):
    def vars_for_template(player):
        return dict(
            information_cost = player.session.config['information_cost'],
            switching_cost = player.session.config['switching_cost'])

class InitialDecision(Page):
    form_model = 'player'
    form_fields = ['choice', 'trial_payoff', 'payout_left', 'payout_right']

    def vars_for_template(player):
        template_vars = {
            "symbols" : player.participant.vars["symbols"],
            "outcomes" : player.participant.vars["outcomes"],
            "payoff_a"  : [player.session.config['payoff_high_a'], player.session.config['payoff_low_a']],
            "probability_a" : player.session.config['probability_win_a'],
            "payoff_b"  : [player.session.config['payoff_high_b'], player.session.config['payoff_low_b']],
            "probability_b" : player.session.config['probability_win_b']
        }
        return template_vars

    def before_next_page(player, timeout_happened):
        player.participant.vars["total_payoff"] = player.trial_payoff
        player.participant.vars["previous_choice"] = player.choice


page_sequence = [New_Stage_Announcement]
